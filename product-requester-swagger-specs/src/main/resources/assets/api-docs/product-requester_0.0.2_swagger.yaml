---
swagger: "2.0"
info:
  description: "A simple studding project that serves through products."
  version: "0.0.2"
  title: "Product requester"
  contact:
    email: "khomenko.dp@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/kh0ma/product-requester/0.0.2"
tags:
- name: "product_categories_api"
  description: "CRUD for Product Categories"
- name: "products_api"
  description: "CRUD for Products"
- name: bill_cycle_api
  description: "CRUD for BillCycle"
- name: bill_cycle_run_api
  description: "CRUD for BillCycleRun"
- name: subscription_api
  description: "CRUD for Subscription"
- name: invoice_api
  description: "CRUD for Invoice"
schemes:
- "https"
paths:
  /subscriptions:
    get:
      tags:
      - subscription_api
      summary: "Get all Subscriptions"
      description: "the server return all Subscriptions.\n"
      operationId: "getSubscriptions"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Subscriptions in array"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Subscription"
    post:
      tags:
      - subscription_api
      summary: "Add new Subscription"
      description: "Create and save given Subscription\n"
      operationId: "saveSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "subscription"
        description: "Provide valid Subscription"
        required: true
        schema:
          $ref: "#/definitions/Subscription"
      responses:
        201:
          description: "the Subscription was successfully created"
        400:
          description: "the Subscription was not valid"
  /subscriptions/{subscription_id}:
    get:
      tags:
      - subscription_api
      summary: "Get the Subscription by the given id."
      description: "Return the Subscription by the given id.\n"
      operationId: "getSubscription"
      produces:
      - "application/json"
      parameters:
      - name: "subscription_id"
        in: "path"
        description: "an id of Subscription"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        200:
          description: "Requested Subscription"
          schema:
            $ref: "#/definitions/Subscription"
        404:
          description: "not found any Subscriptions by this id"
    put:
      tags:
      - subscription_api
      summary: "Update Subscription by id"
      description: "Update the requested Subscription\n"
      operationId: "updateSubscription"
      consumes:
      - "application/json"
      parameters:
      - name: "subscription_id"
        in: "path"
        description: "an id of Subscription"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - in: "body"
        name: "subscription_id"
        description: "Provide valid Subscription"
        required: true
        schema:
          $ref: "#/definitions/Subscription"
      responses:
        204:
          description: "Successfully updated"
        400:
          description: "the Subscription was not valid"
        404:
          description: "not found any Subscriptions by this id"
    delete:
      tags:
      - subscription_api
      summary: "Delete Subscription by id"
      description: "Delete the requested Subscription\n"
      operationId: "deleteSubscription"
      parameters:
      - name: "subscription_id"
        in: "path"
        description: "an id of Subscription"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        204:
          description: "Successfully deleted"
        404:
          description: "not found any Subscriptions by this id"
  /bill_cycle_runs:
    get:
      tags:
      - bill_cycle_run_api
      summary: "Get all Bill Cycle Runs"
      description: "the server return all Bill Cycle Runs.\n"
      operationId: "getBillCycleRuns"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Bill Cycle Runs in array"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BillCycleRun"
    post:
      tags:
      - bill_cycle_run_api
      summary: "Add new Bill Cycle Run"
      description: "Create and save given Bill Cycle Run\n"
      operationId: "saveBillCycleRun"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "bill_cycle_run"
        description: "Provide valid Bill Cycle Run"
        required: true
        schema:
          $ref: "#/definitions/BillCycleRun"
      responses:
        201:
          description: "the Bill Cycle Run was successfully created"
        400:
          description: "the Bill Cycle Run was not valid"
  /bill_cycle_runs/{bill_cycle_run_id}:
    get:
      tags:
      - bill_cycle_run_api
      summary: "Get the Bill Cycle Run by the given id."
      description: "Return the bill cycle run by the given id.\n"
      operationId: "getBillCycleRun"
      produces:
      - "application/json"
      parameters:
      - name: "bill_cycle_run_id"
        in: "path"
        description: "an id of bill cycle run"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        200:
          description: "Requested Bill Cycle Run"
          schema:
            $ref: "#/definitions/BillCycleRun"
        404:
          description: "not found any Bill Cycle Run by this id"
    put:
      tags:
      - bill_cycle_run_api
      summary: "Update Bill Cycle Run by id"
      description: "Update the requested bill cycle run\n"
      operationId: "updateBillCycleRun"
      consumes:
      - "application/json"
      parameters:
      - name: "bill_cycle_run_id"
        in: "path"
        description: "an id of bill cycle run"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - in: "body"
        name: "bill_cycle_run"
        description: "Provide valid Bill Cycle Run"
        required: true
        schema:
          $ref: "#/definitions/BillCycleRun"
      responses:
        204:
          description: "Successfully updated"
        400:
          description: "the bill cycle run was not valid"
        404:
          description: "not found any bill cycle runs by this id"
    delete:
      tags:
      - bill_cycle_run_api
      summary: "Delete Bill Cycle Run by id"
      description: "Delete the requested bill cycle run\n"
      operationId: "deleteBillCycleRun"
      parameters:
      - name: "bill_cycle_run_id"
        in: "path"
        description: "an id of bill cycle run"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        204:
          description: "Successfully deleted"
        404:
          description: "not found any Bill Cycle Run by this id"
  /bill_cycles:
    get:
      tags:
      - bill_cycle_api
      summary: "Get all Bill Cycles"
      description: "the server return all Bill Cycles.\n"
      operationId: "getBillCycles"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Bill Cycles in array"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BillCycle"
    post:
      tags:
      - bill_cycle_api
      summary: "Add new Bill Cycle"
      description: "Create and save given Bill Cycle\n"
      operationId: "saveBillCycle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "bill_cycle"
        description: "Provide valid Bill Cycle"
        required: true
        schema:
          $ref: "#/definitions/BillCycle"
      responses:
        201:
          description: "the Bill Cycle was successfully created"
        400:
          description: "the Bill Cycle was not valid"
  /bill_cycles/{bill_cycle_id}:
    get:
      tags:
      - bill_cycle_api
      summary: "Get the Bill Cycle by the given id."
      description: "Return the bill cycle by the given id.\n"
      operationId: "getBillCycle"
      produces:
      - "application/json"
      parameters:
      - name: "bill_cycle_id"
        in: "path"
        description: "an id of bill cycle"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        200:
          description: "Requested Bill Cycle"
          schema:
            $ref: "#/definitions/BillCycle"
        404:
          description: "not found any Bill Cycle by this id"
    put:
      tags:
      - bill_cycle_api
      summary: "Update Bill Cycle by id"
      description: "Update the requested bill cycle\n"
      operationId: "updateBillCycle"
      consumes:
      - "application/json"
      parameters:
      - name: "bill_cycle_id"
        in: "path"
        description: "an id of bill cycle"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - in: "body"
        name: "bill_cycle"
        description: "Provide valid Bill Cycle"
        required: true
        schema:
          $ref: "#/definitions/BillCycle"
      responses:
        204:
          description: "Successfully updated"
        400:
          description: "the bill cycle was not valid"
        404:
          description: "not found any bill cycles by this id"
    delete:
      tags:
      - bill_cycle_api
      summary: "Delete Bill Cycle by id"
      description: "Delete the requested bill cycle\n"
      operationId: "deleteBillCycle"
      parameters:
      - name: "bill_cycle_id"
        in: "path"
        description: "an id of bill cycle"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        204:
          description: "Successfully deleted"
        404:
          description: "not found any BillCycle by this id"
  /product_categories:
    get:
      tags:
      - "product_categories_api"
      summary: "Get all Product Categories"
      description: "the server return all Product Categories.\n"
      operationId: "getProductCategories"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Product Categories in array"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductCategory"
    post:
      tags:
      - "product_categories_api"
      summary: "Add new Product Category"
      description: "Create and save given Product Category\n"
      operationId: "saveProductCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "product_category"
        description: "Provide valid Product Category"
        required: true
        schema:
          $ref: "#/definitions/ProductCategory"
      responses:
        201:
          description: "the Product category was successfully created"
        400:
          description: "the Product category was not valid"
  /product_categories/{category_id}:
    get:
      tags:
      - "product_categories_api"
      summary: "Get the Product Category by the given id."
      description: "Return the product category by the given category id.\n"
      operationId: "getProductCategory"
      produces:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        200:
          description: "Requested Product Category"
          schema:
            $ref: "#/definitions/ProductCategory"
        404:
          description: "not found any Product Category by this id"
    put:
      tags:
      - "product_categories_api"
      summary: "Update Product Category by id"
      description: "Update the requested product category\n"
      operationId: "updateProductCategory"
      consumes:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - in: "body"
        name: "product_category"
        description: "Provide valid Product Category"
        required: true
        schema:
          $ref: "#/definitions/ProductCategory"
      responses:
        204:
          description: "Successfully updated"
        400:
          description: "the Product category was not valid"
        404:
          description: "not found any Product Category by this id"
    delete:
      tags:
      - "product_categories_api"
      summary: "Delete Product Category by id"
      description: "Delete the requested product category\n"
      operationId: "deleteProductCategory"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        204:
          description: "Successfully deleted"
        404:
          description: "not found any Product Category by this id"
  /product_categories/{category_id}/products:
    get:
      tags:
      - "products_api"
      summary: "Get all Products by the requested Product Category"
      description: "the server return all Products by the requestes Product Category.\n"
      operationId: "getProducts"
      produces:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        200:
          description: "Products in array"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
    post:
      tags:
      - "products_api"
      summary: "Add new Product"
      description: "Create and save given Product\n"
      operationId: "saveProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - in: "body"
        name: "product"
        description: "Provide valid Product"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        201:
          description: "the Product was successfully created"
        400:
          description: "the Product was not valid"
        404:
          description: "not found any Product Category by this id"
  /product_categories/{category_id}/products/{id}:
    get:
      tags:
      - "products_api"
      summary: "Get the Product by the given id."
      description: "Return the product by the given id.\n"
      operationId: "getProduct"
      produces:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - name: "id"
        in: "path"
        description: "an id of product"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        200:
          description: "Requested Product"
          schema:
            $ref: "#/definitions/Product"
        404:
          description: "not found any Product or Product Category by this id's"
    put:
      tags:
      - "products_api"
      summary: "Update Product by id"
      description: "Update the requested product\n"
      operationId: "updateProduct"
      consumes:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - name: "id"
        in: "path"
        description: "an id of product"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - in: "body"
        name: "product"
        description: "Provide valid Product"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        204:
          description: "Successfully updated"
        400:
          description: "the Product was not valid"
        404:
          description: "not found any Product or Product Category by this id's"
    delete:
      tags:
      - "products_api"
      summary: "Delete Product by id"
      description: "Delete the requested product\n"
      operationId: "deleteProduct"
      parameters:
      - name: "category_id"
        in: "path"
        description: "an id of product category"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      - name: "id"
        in: "path"
        description: "an id of product"
        required: true
        type: "number"
        minimum: 1
        format: "int64"
      responses:
        204:
          description: "Successfully deleted"
        404:
          description: "not found any Product or Product Category by this id's"
definitions:
  Product:
    type: "object"
    required:
    - "name"
    - "price"
    - "product_category_id"
    properties:
      id:
        type: "number"
        format: "int64"
        example: 19554785
      name:
        type: "string"
        example: "Apple"
      price:
        type: "number"
        format: "bigdecimal"
        example: 12.99
      description:
        type: "string"
        example: "This is a very large red clinged apple"
      product_category_id:
        type: "number"
        format: "int64"
        example: 12
    example:
      price: 12.99
      name: "Apple"
      description: "This is a very large red clinged apple"
      id: 19554785
      product_category_id: 12
  ProductCategory:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "number"
        format: "int64"
        example: 12
      name:
        type: "string"
        example: "Fruits"
      description:
        type: "string"
        example: "Products that you can eat and get vitamins"
    example:
      name: "Fruits"
      description: "Products that you can eat and get vitamins"
      id: 12
  Invoice:
    type: object
    required:
    - balance
    - subscription_id
    - bill_cycle_run_id
    properties:
      id:
        type: "number"
        format: "int64"
        example: 12
      balance:
        type: number
        format: "bigdecimal"
        example: 12.99
      subscription_id:
        type: "number"
        format: "int64"
        example: 12
      bill_cycle_run_id:
        type: "number"
        format: "int64"
        example: 12
  Subscription:
    type: object
    required:
    - status
    - valid_from
    - valid_to
    - product_id
    - billcycle_id
    properties:
      id:
        type: "number"
        format: "int64"
        example: 12
      status:
        type: string
        enum: &SUBSCRIPTION_STATUSES [DRAFT, ACTIVE, EXPIRED]
      valid_from:
        type: string
        format: date
      valid_to:
        type: string
        format: date      
      product_id:
        type: "number"
        format: "int64"
        example: 12
      bill_cycle_id:
        type: "number"
        format: "int64"
        example: 12
  BillCycle:
    type: object
    required:
    - status
    - valid_from
    - valid_to
    properties:
      id:
        type: "number"
        format: "int64"
        example: 12
      status:
        type: string
        enum: &BILL_CYCLE_STATUSES [DRAFT, ACTIVE, COMPLITED]
      valid_from:
        type: string
        format: date
      valid_to:
        type: string
        format: date
  BillCycleRun:
    type: object
    required:
    - status
    - valid_from
    - valid_to
    - bill_cycle_id
    properties:
      id:
        type: "number"
        format: "int64"
        example: 13
      status:
        type: string
        enum: &BILL_CYCLE_RUN_STATUSES [CREATED, ERROR, COMPLETED]
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      bill_cycle_id:
        type: "number"
        format: "int64"
        example: 144